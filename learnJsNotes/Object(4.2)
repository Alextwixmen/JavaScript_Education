Интересный момент с созданием клона объекта, так как специального метода в JS для этого нет:
let user = {
    name: 'Vasya',
    age: 30,
    size: 45,
}
let clone = {};  //создаем пустой объект, который будет клоном объекта user
for (let key in user) {  //пишем цикл, кторый перебирает всей свойства объекта user
    clone[key] = user[key] // каждый ключ с его значением  объекта user присваемваем объекту key
}
console.log(clone) 
{ name: 'Vasya', age: 30, size: 45 }




Помимо этого, для клонирования можно использовать метод Object.assign.
Синтаксис: Object.assign(dest, [src1, src2, src3...])
- Первый аргумент dest — целевой объект.
- Остальные аргументы src1, ..., srcN (может быть столько, сколько нужно) являются исходными объектами
- Метод копирует свойства всех исходных объектов src1, ..., srcN в целевой объект dest. То есть, свойства всех перечисленных объектов, начиная со второго, копируются в первый объект.
- Возвращает объект dest.

let user = { user: "Sasha" };
let age = { age: 23 };
let city = { country: 'Belarus', city: "Minsk" };
Object.assign(user, age, city);
console.log(user);
{ user: 'Sasha', age: 23, country: 'Belarus', city: 'Minsk' } // то есть он перезаписывает все свойства объектов после запятой в наш первый объект, который указываем в скобках после метода. 
Если принимающий объект (user) уже имеет свойство с таким именем, оно будет перезаписано:
let user = { user: "Sasha" };
let age = { age: 23 };
let newObject = { user: "Ivan", age: 154, }
Object.assign(newObject, user, age); // в связи с тем, что в newObject свойство совпадают с теми объектими, с которых мы берем данные, он их перезаписывает. 
console.log(newObject);
{ user: 'Sasha', age: 23 } // в новом объекте хранятся новые свойства, перезаписанные с двух других объектов




Мы также можем копировать всей свойства из одного или нескольких объектов в пустой объект:
let object = {
    user: "Sasha",
    age: 23,
    city: "MInsk"
}
let clone = Object.assign({}, object); // копируем свойство object в пустой объект {}, который присваеватся переменной clone
console.log(clone);
{ user: 'Sasha', age: 23, city: 'MInsk' } //скопированный свойства
